@using MMB_ASPNET.Models
@model IEnumerable<Player>

<h2>Player Leaderboards</h2>

<form style="margin-bottom:10px" action="/Player/InsertPlayer/">
    <input class="btn-info" type="submit" value="New Player" />
</form>

<table class="table">
    <thead>
        <tr>
            <th>Position</th>
            <th>Name</th>
            <th>MMR</th>
            <th>Wins</th>
            <th>Losses</th>
        </tr>
    </thead>

    @{ var pos = 1; }
    <tbody>
    @foreach(var p in Model)
    {
        <tr>
         <td>@pos</td>
         <td><a href=/Player/ViewPlayer/@p.Id>@p.Name</a></td>
         <td>@p.Mmr</td>
         <td>@p.Wins</td>
         <td>@p.Losses</td>
     </tr>
     { pos++; }
    }
    </tbody>
</table>

<script>
    //Functions for this page were found on StackOverFlow USER: Man Programmer had link to https://jsfiddle.net/oqr0mjc6/3/
    function sortTable(table, col, reverse) {
        var tb = table.tBodies[0], // use `<tbody>` to ignore `<thead>` and `<tfoot>` rows
            tr = Array.prototype.slice.call(tb.rows, 0), // put rows into array
            i;
        reverse = -((+reverse) || -1);
    
        tr = tr.sort(function (a, b) { // sort rows
        
        
            if(!isNaN(a.cells[col].textContent) && !isNaN(b.cells[col].textContent))
            return reverse * ((+a.cells[col].textContent) - (+b.cells[col].textContent))
           return reverse // `-1 *` if want opposite order
                * (a.cells[col].textContent.trim() // using `.textContent.trim()` for test
                    .localeCompare(b.cells[col].textContent.trim())
                   );
        });
        for(i = 0; i < tr.length; ++i) tb.appendChild(tr[i]); // append each row in order
    }

    function makeSortable(table) {
        var th = table.tHead, i;
        th && (th = th.rows[0]) && (th = th.cells);
        if (th) i = th.length;
        else return; // if no `<thead>` then do nothing
        while (--i >= 0) (function (i) {
            var dir = 1;
            th[i].addEventListener('click', function () {sortTable(table, i, (dir = 1 - dir))});
        }(i));
    }

    function makeAllSortable(parent) {
        parent = parent || document.body;
        var t = parent.getElementsByTagName('table'), i = t.length;
        while (--i >= 0) makeSortable(t[i]);
    }

    window.onload = function () {makeAllSortable();};
</script>